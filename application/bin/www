#!/usr/bin/env node

/**
 * Module dependencies.
 */
var app = require("../app");
var debug = require("debug")("app:server");

/**
 * Create HTTPS server.
 */
var fs = require('fs');
var options = {
  key: fs.readFileSync('encryption/ancgis.dev.net.key'),
  cert: fs.readFileSync( 'encryption/ancgis.dev.net.crt' )
};
var https = require('https');
var https_server = https.createServer(options, app);
https_server.listen(443);
https_server.on("error", onError);
https_server.on("listening", onListening);

/**
 * Create HTTP server which runs alongside HTTPS and will redirect to it.
 */
var http = require('http');
var http_server = http.createServer(app);
http_server.listen(80);

/**
 * Event listener for HTTPS server "error" event.
 */
function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string"
    ? "Pipe " + port
    : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTPS server "listening" event.
 */
function onListening() {
  var addr = https_server.address();
  var bind = typeof addr === "string"
    ? "pipe " + addr
    : "port " + addr.port;
  debug("Listening on " + bind);
}
